<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanhuan.yhssm.dao.UserDao">
    <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"></cache>
    <resultMap id="BaseResultMap" type="User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="TINYINT"/>
        <result column="user_status" property="userStatus" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="allColumnsWithOutId">
        (username,password,phone,email,user_type,user_status,create_time,update_time,create_user,update_user,is_delete)
    </sql>

    <sql id="allColumns">
        id,username,password,phone,email,user_type,user_status,create_time,update_time,create_user,update_user,is_delete
    </sql>

    <!-- 插入方法，插入后返回主键-->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <include refid="allColumnsWithOutId"/>
        values (
        #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{userType,jdbcType=TINYINT},
        #{userStatus,jdbcType=TINYINT},
        now(),
        now(),
        #{createUser,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR},
        0
        )
    </insert>

    <update id="update" parameterType="User">
        update user
        <set>
            update_time = now(),update_user=#{updateUser,jdbcType=VARCHAR},
            <trim>
                <if test="password != null and password != ''">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="phone != null and phone != ''">
                    phone = #{phone,jdbcType=VARCHAR},
                </if>
                <if test="email != null and email != ''">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="userType != null">
                    user_type = #{userType,jdbcType=TINYINT},
                </if>
                <if test="userStatus != null">
                    user_status = #{userStatus,jdbcType=TINYINT},
                </if>
            </trim>
        </set>
        where id =#{id,jdbcType=BIGINT}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        update user set is_delete = 1,update_time = now() where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="getUserByCondition" resultMap="BaseResultMap" parameterType="UserCondition" useCache="true">
        SELECT
        <include refid="allColumns"/>
        from user
        <where>
            <if test="id != null and id != 0">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="username != null and username != ''">
                and username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != ''">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != ''">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="userType != null">
                and user_type = #{userType,jdbcType=TINYINT}
            </if>
            <if test="userStatus != null">
                and user_status = #{userStatus,jdbcType=TINYINT}
            </if>
            <choose>
                <when test="isDelete != null">
                    and is_delete = #{isDelete,jdbcType=TINYINT}
                </when>
                <otherwise>
                    and is_delete = 0
                </otherwise>
            </choose>
        </where>
        limit 1
    </select>

</mapper>